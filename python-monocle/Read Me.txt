Note: This folder goes into the root folder of the Monocle Project


USING PYTHON-MONOCLE

First download and install Python 2.7, then simply import the Monocle.pyd located in Demos, see 
Demos for example.


COMPILING/FIXING CURRENT BINDINGS

If you want to help fix the current bindings or compile the current bindings yourself, there are several steps 
needed in order to compile Monocle.pyd (this is just a renamed dll).

1) Compile Monocle into a static lib

2) You will need to download boost 1.46.1 and compile boost::python using bjam. Check out the documentation here:
http://www.boost.org/doc/libs/1_46_1/libs/python/doc/building.html


GENERATING BINDINGS

Note: You will only need to do this if the Monocle source has changed since the last compiled Monocle.pyd

I used py++ to generate the boost::python code. Py++ uses py-gccxml and GCC_XML to help generate the code.

Get py++/py-gccxml here: http://sourceforge.net/projects/pygccxml/files/

Get GCC_XML here: http://www.gccxml.org/HTML/Index.html

Note: You'll want to use the CVS version of GCC_XML, do not use the downloadable version on the site.


cmake is used to build gccxml, so go there and download the Windows binary and install it.


gccxml is needed for Py++ to parse C++ library code
To compile gccxml, run the CMake setup tool, and the cmake-gui tool to generate the visual studio project files.
Once generated, open gccxml.sln and let visual studio compile everything (Build Solution)
Be sure to have the proper Platform SDK lib/include paths set!
if successful, gccxml binaries should be in <your-bin-folder>/bin/release


Once you have the toolchain set up open python-bindings.py add the path to Monocle.h and the gcc_xml executable.
Run and it'll create a new bindings.cpp Look over the bindings and make sure it hasn't missed anything, if it
has just swap the header from Monocle.h to the header of the missing class, copy/paste the missing code into your
first bindings.cpp

Note: A lot of the code that is in the current bindings.cpp is hand made because it was missing in the generated
code, so you may want to keep it for reference.
