<?xml version="1.0" encoding="UTF-8"?>
<VariablesStackState
   version = "1.0">
   <StackStates>
      <StackState
         stackFrameDescription = "Monocle::Assets::RequestAudio(std::string const&amp;, bool, std::string const&amp;):Assets.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::AudioAsset::GetDecodeString():AudioAsset.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::AudioDeck::AudioDeck(Monocle::AudioDeck*, Monocle::AudioDecodeData*):AudioDeck.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::AudioDeck::~AudioDeck():AudioDeck.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::Audio::NewDeck(Monocle::AudioAsset*):Audio.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::Assets::RequestAudio(std::string const&amp;, bool, std::string):Assets.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::AudioAssetReader::Read(void*, unsigned long):AudioAssetReader.cpp">
         <expressions>
            <expression
               value = "(char*)dst">
            </expression>
            <expression
               value = "(char)dst[2]">
            </expression>
            <expression
               value = "(char *)(dst+1)">
            </expression>
            <expression
               value = "sizeAdjustToFive">
            </expression>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::AudioAssetReader::AudioAssetReader(Monocle::AudioAsset*, std::string):AudioAssetReader.cpp">
         <expressions>
            <expression
               value = "asset-&gt;filename">
            </expression>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::AudioAsset::SetDecodeString(std::string):AudioAsset.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "AudioTest::GameScene::Begin():AudioTest.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::oggInit(Monocle::AudioDecodeData*):OggDecoder.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::AudioDeck::ResetDeck():AudioDeck.cpp">
         <expressions>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::Audio::RegisterDecoder(Monocle::AudioDecoder*, std::string):Audio.cpp">
         <expressions>
            <expression
               value = "decoderMap">
            </expression>
         </expressions>
      </StackState>
      <StackState
         stackFrameDescription = "Monocle::VorbisRead(void*, unsigned long, unsigned long, void*):OggDecoder.cpp">
         <expressions>
            <expression
               value = "(char*)ptr">
            </expression>
         </expressions>
      </StackState>
   </StackStates>
</VariablesStackState>
